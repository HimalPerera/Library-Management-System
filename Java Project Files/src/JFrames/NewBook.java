/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JFrames;

import DB.DBConnection;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Himal
 */
public class NewBook extends javax.swing.JFrame {
    //declaring instance variables
    Connection connection;
    ResultSet rsltSet;
    PreparedStatement pStatement;
    Statement statement;

    int bookID = 0;
    String title = null;
    String author = null;
    int pages = 0;
    String type = null;
    double fine = 0;
    int lendingPeriod = 0;
    /**
     * Creates new form NewBook
     */
    public NewBook() {
        initComponents();

        //initializes the connection to database
        connection = DBConnection.getDBConnection().getConnection();

        //item listner for disabling and enabling fine textfield and lending period textfield for the book type(lending or not lending)
        jComboBoxType.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent event) {

                if (event.getStateChange() == 1 && jComboBoxType.getSelectedIndex() == 1) {
                    jTxtFine.setEnabled(false);
                    jTxtLendingPeriod.setEnabled(false);
                }
                if (event.getStateChange() == 1 && jComboBoxType.getSelectedIndex() == 0) {
                    jTxtFine.setEnabled(true);
                    jTxtLendingPeriod.setEnabled(true);
                }
            }
        });

        //counts the number of books in the database and calculate the bookID for the new book
        String query = "SELECT * FROM book";
        int bookCount = 0;
        try {
            statement = connection.createStatement();
            rsltSet = statement.executeQuery(query);

            while (rsltSet.next()) {
                bookCount++;
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

        jTxtBookID.setText(String.valueOf(bookCount + 1));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTxtPages = new javax.swing.JTextField();
        jTxtTitle = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxType = new javax.swing.JComboBox<>();
        jTxtAuthor = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTxtFine = new javax.swing.JTextField();
        jTxtBookID = new javax.swing.JTextField();
        jBtnAdd = new javax.swing.JButton();
        jTxtLendingPeriod = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jBtnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Add New Book");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)), "New Book", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(0, 153, 51))); // NOI18N

        jTxtPages.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jTxtTitle.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Book ID");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Title");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Author");

        jComboBoxType.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBoxType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lending", "Reference" }));

        jTxtAuthor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Fine per day (Rs)");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Number of pages");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Lending period in days");

        jTxtFine.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jTxtBookID.setEditable(false);
        jTxtBookID.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jBtnAdd.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBtnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/save.png"))); // NOI18N
        jBtnAdd.setText("Add");
        jBtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAddActionPerformed(evt);
            }
        });

        jTxtLendingPeriod.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Type");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTxtBookID)
                            .addComponent(jTxtTitle)
                            .addComponent(jTxtAuthor)
                            .addComponent(jTxtPages)
                            .addComponent(jTxtLendingPeriod)
                            .addComponent(jTxtFine)
                            .addComponent(jComboBoxType, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTxtBookID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTxtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTxtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTxtPages, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBoxType, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTxtLendingPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTxtFine, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jBtnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                .addContainerGap())
        );

        jBtnBack.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBtnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/back.png"))); // NOI18N
        jBtnBack.setText("Back");
        jBtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnBack))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnBack, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAddActionPerformed
        //if the book is a lending book
        if (jTxtFine.isEnabled() && jTxtLendingPeriod.isEnabled()) {
            //if the required fields are not empty
            if (!jTxtTitle.getText().equals("") && !jTxtAuthor.getText().equals("") && !jTxtPages.getText().equals("") && !jTxtFine.getText().equals("") && !jTxtLendingPeriod.getText().equals("")) {
                bookID = Integer.parseInt(jTxtBookID.getText());
                title = jTxtTitle.getText();
                author = jTxtAuthor.getText();
                
                //checks whether the input for the number of pages is a number
                try {
                pages = Integer.parseInt(jTxtPages.getText());
                } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Enter a valid number for number of pages");
                return;
                }
                
                type = jComboBoxType.getSelectedItem().toString();
                
                //checks whether the input for the fine is a number
                try {
                fine = Double.parseDouble(jTxtFine.getText());
                } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Enter a valid number for fine");
                return;
                }
                
                //checks whether the input for the lending period is a number
                try {
                lendingPeriod = Integer.parseInt(jTxtLendingPeriod.getText());
                } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Enter a valid number for lending period");
                return;
                }

                //inserts the data into database
                try {
                    String query = "INSERT INTO book (Book_ID, Title, Author, Pages, Type, Lending_Period, Fine) VALUES (?, ?, ?, ?, ?, ?, ?)";
                    pStatement = connection.prepareStatement(query);
                    pStatement.setInt(1, bookID);
                    pStatement.setString(2, title);
                    pStatement.setString(3, author);
                    pStatement.setInt(4, pages);
                    pStatement.setString(5, type);
                    pStatement.setInt(6, lendingPeriod);
                    pStatement.setDouble(7, fine);
                    pStatement.execute();
                    JOptionPane.showMessageDialog(null, "Successfully added to the database");
                    pStatement.close();

                    //disables the add button after the data has been added to the database
                    jBtnAdd.setEnabled(false);
                } catch (SQLException ex) {
                    Logger.getLogger(Signup.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, ex);
                }
            } else if (jTxtTitle.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Enter the title of the book");
            } else if (jTxtAuthor.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Enter the author");
            } else if (jTxtPages.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Enter the number of pages");
            } else if (jTxtFine.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Enter the fine for the book");
            } else if (jTxtLendingPeriod.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Enter the number of days lending");
            }
            //if the book is not a lending book
        } else if (!jTxtFine.isEnabled() && !jTxtLendingPeriod.isEnabled()) {
            //if the required fields are not empty
            if (!jTxtTitle.getText().equals("") && !jTxtAuthor.getText().equals("") && !jTxtPages.getText().equals("")) {
                bookID = Integer.parseInt(jTxtBookID.getText());
                title = jTxtTitle.getText();
                author = jTxtAuthor.getText();
                
                //checks whether the input for the number of pages is a number
                try {
                pages = Integer.parseInt(jTxtPages.getText());
                } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Enter a valid number for number of pages");
                return;
                }
                type = jComboBoxType.getSelectedItem().toString();
                fine = 0.0;
                lendingPeriod = 0;

                //inserts the data into database
                try {
                    String query = "INSERT INTO book (Book_ID, Title, Author, Pages, Type, Lending_Period, Fine) VALUES (?, ?, ?, ?, ?, ?, ?)";
                    pStatement = connection.prepareStatement(query);
                    pStatement.setInt(1, bookID);
                    pStatement.setString(2, title);
                    pStatement.setString(3, author);
                    pStatement.setInt(4, pages);
                    pStatement.setString(5, type);
                    pStatement.setInt(6, lendingPeriod);
                    pStatement.setDouble(7, fine);
                    pStatement.execute();
                    JOptionPane.showMessageDialog(null, "Successfully added to the database");
                    pStatement.close();

                    //disables the add button after the data has been added to the database
                    jBtnAdd.setEnabled(false);
                } catch (SQLException ex) {
                    Logger.getLogger(Signup.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, ex);
                }
            } else if (jTxtTitle.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Enter the title of the book");
            } else if (jTxtAuthor.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Enter the author");
            } else if (jTxtPages.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Enter the number of pages");
            }
        }

    }//GEN-LAST:event_jBtnAddActionPerformed

    private void jBtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBackActionPerformed
        this.dispose();
        new HomePage().setVisible(true);
    }//GEN-LAST:event_jBtnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAdd;
    private javax.swing.JButton jBtnBack;
    private javax.swing.JComboBox<String> jComboBoxType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTxtAuthor;
    private javax.swing.JTextField jTxtBookID;
    private javax.swing.JTextField jTxtFine;
    private javax.swing.JTextField jTxtLendingPeriod;
    private javax.swing.JTextField jTxtPages;
    private javax.swing.JTextField jTxtTitle;
    // End of variables declaration//GEN-END:variables
}
